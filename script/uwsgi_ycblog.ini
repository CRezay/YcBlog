# luffy_uwsgi.ini file
[uwsgi]

# Django-related settings
# the base directory (full path)
# 指定运行目录，其实就是项目的根目录
chdir = /root/YcBlog

# Django's wsgi file
# 导入django项目的wsgi模块
module = cnblog.wsgi:application

# 载入wsgi-file
wsgi-file = cnblog/wsgi.py

# the virtualenv (full path)
# 配置虚拟环境python相关依赖包所在路径
home = /root/YcBlog/venv

# 补充，uwsgi启动时的用户和用户组,注意要按你自己的实际权限进行配置
# 我这边是因为项目属主是operation，而operation我设置了添加进了nginx组
# 但这种情况下uid仍不能设置nginx，除非你的项目目录所有文件属主都改为了nginx
; uid = operation
; gid = nginx

# process-related settings
# 开启master主进程
master = true 

# maximum number of worker processes
# 开启多少个进程数，workers项也等同processes
# threads项则是设置运行线程，测试倒不用设置上线程
processes = 4

# the socket (use the full path to be safe)
# 设置使用的socket端口或socket地址
# socket = 0.0.0.0:8000
# 上面的socket建议配置成一个luffy.socket文件后使用nginx来连接uWSGI运行,不然容易报socket的请求头错误和权限错误等。
socket = /root/YcBlog/ycblog.sock

# ... with appropriate permissions - may be needed
# 配置生成的sock文件的权限
chmod-socket = 664 
# 指定日志文件的权限
logfile-chmod=644 
# 进程在后台运行，并将日志打印到指定文件
daemonize=%(chdir)/script/uwsgi.log 
# 在失去权限前，将主进程pid写到指定的文件
pidfile=%(chdir)/script/uwsgi.pid 

# clear environment on exit
# 退出时清空环境，其实就是将自动生成的luffy.sock和相关pid文件给干掉。
vacuum = true
